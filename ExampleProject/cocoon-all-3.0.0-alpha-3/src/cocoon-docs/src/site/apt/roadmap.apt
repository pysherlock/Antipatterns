 -----
  Roadmap
 -----
 -----
 2009
 -----

Cocoon 3 Roadmap

    If you are interested in developing and improving Cocoon, any participation is highly appreciated. 
    The tasks listed here are only suggestions. If you have other ideas, please
    join us on our {{{mail-lists.html} developers mailing list}}). 
    
* Unscheduled simple features

    These tasks are a good starting point for everybody who wants to contribute to Cocoon 3.
    
    * [XSLT] Improved error handling in XSLT transformer. Show detailed information
      provided by the XSLT engine where an error occurs. (cocoon-pipeline)
    
    * [XSLT] Make the TraxTransformer a CachingPipelineComponent. (cocoon-pipeline)
    
    * [XSLT] Use the Cocoon 2.2 org.apache.cocoon.components.xslt.XSLTProcessorImpl (cocoon-pipeline)
    
    * Support custom matchers (<<<\<map:match type="my-custom-matcher"/\>>>>)
    
    * Enable file uploads (cocoon-servlet)
    
* Unscheduled advanced features
    
    * Improve caching when the servlet protocol is used (cocoon-servlet/cocoon-sitemap)
    
    * Using SAX buffers in servlet protocol (cocoon-servlet, cocoon-servlet-service-fw-impl)
    
    * Review package structure for OSGi (all)
    
    * Support OSGi environments at service level (all)    
    
    * Provide XML catalog support: find a way to make the entity resolver of the SAX parser
      configurable in the case of using pipeline components directly (cocoon-pipeline) as well as when they
      are used together with Spring (cocoon-sitemap) 
      
    * EHCache as caching provider for pipelines (cocoon-pipeline)
    
    * Find a general mechanism to provide global pipeline settings (see entity resolver and XML catalog support) (cocoon-pipeline)
    
    * Merge all collector components (MimeTypeCollector, StatusCodeCollector, LastModifiedCollector) into one in order to avoid 
      those many around advices (one is enough). (cocoon-servlet).       
        
    * Adapter to use Cocoon 2.2 sitemap components from within Cocoon 3 OR migrate some more components (cocoon-pipeline)
    
    * Provide adapters that enable the mix of different component types in the same pipeline (cocoon-pipeline)
    
    * If an exception is thrown, show the sitemap execution path. See Cocoon 2.2 for this feature (cocoon-sitemap)    

    * Content-based routing in pipelines (cocoon-pipeline)
    
    * Enable nested pipelines (cocoon-pipeline)    
    
    * Define a sitemap directly in a Spring bean declaration where a Cocoon sitemap servlet-service is defined.
    
    * Provide an Ant task that allows to execute a Cocoon pipeline.
    