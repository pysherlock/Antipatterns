<?xml version="1.0"?>
<!-- $Id: build.xml 112 2008-05-10 16:47:03Z linus $ -->
<!-- =========================================================================
       Build file for ArgoUML classfile module
     =========================================================================
-->
<project name="argouml-classfile" default="compile" basedir=".">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->

 <target name="init">

    <property file="build.properties"/>
    <property file="module.properties"/>

    <!-- Load ArgoUML properties -->
    <!-- we really need an absolute path for argo.root.dir -->
    <!-- if it is set in a property file before now, it must be absolute -->
    <property name="argo.root.dir" value="${basedir}/../argouml"/>
    <!-- Read the override file to get base paths for default.properties
         correct for when running this from the Eclipse setup. -->
    <property file="${override.build.properties}"/>

    <property name="argo.src.dir" value="${argo.root.dir}/src"/>
    <property name="argo.app.dir" value="${argo.src.dir}/argouml-app"/>

    <!-- If not set by the override file we still need this one for antlr. -->
    <property name="argo.app.src.dir" value="${argo.app.dir}/src"/>

    <property file="${argo.app.src.dir}/default.properties"/>

    <property name="module.root" value="."/>
    <property name="module.src.dir" value="${module.root}/src"/>

    <property name="manifest" value="manifest.mf"/>
    <property name="manifest.src" value="${module.src.dir}/org/${manifest}"/>

    <property name="module.build.dir" value="${module.root}/build"/>
    <property name="module.build.classes" value="${module.build.dir}/classes"/>

    <!-- When building from ant, this directory is created and the java is
         generated into it. When building from Eclipse, the source directory
         is used. -->
    <property name="module.build.java" value="${module.root}/src_generated"/>

    <property name="argo.jarfile"
              value="${argo.build.dir}/argouml.jar"/>
    <property name="module.jarfile.name"
              value="argo_classfile.jar"/>
    <property name="module.jarfile"
              value="${module.build.dir}/${module.jarfile.name}"/>

    <property file="${user.home}/.argo.ant.properties"/>
    <property file="${user.home}/.ant.properties"/>

    <property name="debug" value="on"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="off"/>

    <property name="result.dir" value="${argo.root.dir}/build"/>

  </target>

  <!-- Note this file can only make Ant display values set in the file correctly, -->
  <!-- but external values in the environment or properties file will be operational.  -->

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <!-- create directories -->
    <echo message="Preparing the build directories"/>
    <!-- These must be there already -->
  </target>

  <!-- =================================================================== -->
  <!-- Generates the parsers from the grammars by using Antlr              -->
  <!-- =================================================================== -->

  <target name="generateparser" depends="prepare" 
  	  description="generate the parser(s) from the ANTLR grammar file(s)">
    <echo message="Generate parsers using ${antlrall.jar.path}"/>

    <java fork="yes" classname="antlr.Tool" classpath="${antlrall.jar.path}">
      <arg value="-o"/>
      <arg file="src_generated/org/argouml/uml/reveng/classfile"/>
      <arg file="src/org/argouml/uml/reveng/classfile/classfile.g"/>
    </java>
    <java fork="yes" classname="antlr.Tool" classpath="${antlrall.jar.path}">
      <arg value="-o"/>
      <arg file="src_generated/org/argouml/uml/reveng/classfile"/> 
      <arg file="src/org/argouml/uml/reveng/classfile/classfile.tree.g"/>
    </java>

  </target>         

  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <target name="compile" depends="generateparser,prepare"
  	  description="Compile the sources into the build directory tree">

    <echo message="Compiling the sources"/>

    <!-- create directories -->
    <mkdir dir="${module.build.classes}"/>

    <javac
           destdir="${module.build.classes}"
           excludes="*.txt,*.bat,*.xml,*.sh"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}">
        <src path="${module.src.dir}"/>
        <src path="${module.build.java}"/>
        <classpath>
            <pathelement location="${argo.build.dir}/argouml.jar"/>
            <pathelement location="${gef.jar.path}"/>
            <pathelement location="${log4j.jar.path}"/>
            <pathelement location="${antlrall.jar.path}"/>
            <pathelement location="${argo.build.dir}/argouml-model.jar"/>
        </classpath>
     </javac>
  </target>


  <!-- =================================================================== -->
  <!-- Creates the class jar                                               -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile" description="Build the module .jar">
    <copy file="${manifest.src}" tofile="${module.build.classes}/${manifest}" 
    	filtering="on" overwrite="on" />
    <jar jarfile="${module.jarfile}"
        basedir="${module.build.classes}"
        includes="org/argouml/**"
        excludes="*.txt,*.bat,*.xml,*.sh,${manifest}"
        manifest="${module.build.classes}/${manifest}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Run ArgoUML from compiled sources                                   -->
  <!-- =================================================================== -->
  <target name="run" depends="jar" 
  	  description="Run ArgoUML with the module loaded">
    <java classname="org.argouml.application.Main"
          fork="yes">
        <classpath>
            <fileset dir="${module.build.dir}">
                <include name="${module.jarfile.name}" />
	    </fileset>
            <pathelement location="${argo.build.dir}/argouml.jar"/>
            <pathelement location="${ocl-argo.jar.path}"/>
            <pathelement location="${gef.jar.path}"/>
            <pathelement location="${log4j.jar.path}"/>
            <pathelement location="${swidgets.jar.path}"/>
            <pathelement location="${toolbar.jar.path}"/>
            <pathelement location="${commons-logging.jar.path}"/>
            <pathelement location="${antlrall.jar.path}"/>
            <pathelement location="${argo.build.dir}/argouml-model.jar"/>
        </classpath>

    </java>
  </target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete file="${result.dir}/ext/${module.jarfile.name}"/>
    <delete file="${argo.build.dir}/ext/${module.jarfile.name}"/>
    <delete dir="${module.build.dir}"/>
  	<delete>
  	  <fileset dir="src/org/argouml/uml/reveng/classfile">
  	  	<include name="ClassfileParser.java"/>
  	  	<include name="ClassfileTokenTypes.java"/>
  	  	<include name="ClassfileTokenTypes.txt"/>
  	  	<include name="ClassfileTreeParser.java"/>
  	  	<include name="ClassfileTreeParserTokenTypes.java"/>
  	  	<include name="ClassfileTreeParserTokenTypes.txt"/>
  	  </fileset>
  	</delete>
  </target>

  <!-- =================================================================== -->
  <!-- Move the jar file into the extension directory.                     -->
  <!-- =================================================================== -->
  <target name="install" depends="jar"
  	  description="copy module .jar file to argouml/ext directory">
    <copy todir="${result.dir}/ext">
      <fileset dir="${module.build.dir}" includes="${module.jarfile.name}"/>
    </copy>
  </target>

</project>

<!-- End of file -->
