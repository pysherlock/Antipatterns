<?xml version="1.0"?>

<!-- ===========================================================================
     Ant build for ArgoUML PHP module
     ============================================================================ -->

<project name="argouml-module" default="compile" basedir=".">

  <!-- =================================================================== -->
  <!-- Initialization target                                               -->
  <!-- =================================================================== -->

 <target name="init">

    <property file="module.properties"/>

    <!-- we really need an absolute path for argo.root.dir -->
    <!-- if it is set in a property file before now, it must be absolute -->
    <property name="argo.root.dir" value="${basedir}/../argouml" />
    <property file="${override.build.properties}"/>

    <property name="argo.src.dir" value="${argo.root.dir}/src/argouml-app/src"/>
    <property file="${argo.src.dir}/default.properties"/>

    <property name="module.root" value="${basedir}"/>
    <property name="module.src.dir" value="${module.root}/src"/>

    <property name="packages" value="org.argouml.*"/>
    <property name="manifest" value="manifest.mf"/>
    <property name="manifest.src" value="${module.src.dir}/org/${manifest}"/>

    <property name="module.build.dir" value="${module.root}/build"/>
    <property name="module.build.src" value="${module.src.dir}"/>
    <property name="module.build.dest" value="${module.build.dir}/classes"/>

    <property name="argo.jarfile"
              value="${argo.build.dir}/argouml.jar"/>
    <property name="module.jarfile.name"
              value="argo_php.jar"/>
    <property name="module.jarfile"
              value="${module.build.dir}/${module.jarfile.name}"/>

    <property file="${user.home}/.argo.ant.properties"/>
    <property file="${user.home}/.ant.properties"/>

    <property name="debug" value="off"/>
    <property name="optimize" value="on"/>
    <property name="deprecation" value="on"/>
    <property name="result.dir" value="${argo.root.dir}/build"/>

  </target>

  <!-- Note this file can only make Ant display values set in the file correctly, -->
  <!-- but external values in the environment or properties file will be operational.  -->

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare" depends="init">
    <!-- create directories -->
    <echo message="Preparing the build directories"/>
    <!-- These must be there already -->
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source directory                                       -->
  <!-- =================================================================== -->
  <!-- <target name="compile" depends="generateparser,prepare"> -->

  <target name="compile" depends="prepare"> 

    <echo message="Compiling the sources"/>

    <!-- create directories -->
    <mkdir dir="${module.build.dest}"/>

    <javac srcdir="${module.build.src}"
           destdir="${module.build.dest}"
           excludes="*.txt,*.bat,*.xml,*.sh"
           debug="${debug}"
           deprecation="${deprecation}"
           optimize="${optimize}">
        <classpath>
            <pathelement location="${argo.build.dir}/argouml.jar"/>
            <pathelement location="${argo.build.dir}/log4j.jar"/>
            <pathelement location="${argo.build.dir}/argouml-model.jar"/>
        </classpath>
     </javac>
  </target>


  <!-- =================================================================== -->
  <!-- Creates the class jar                                           -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile">
    <copy file="${manifest.src}" tofile="${module.build.dest}/${manifest}" filtering="on" overwrite="on" />
    <jar jarfile="${module.jarfile}"
         basedir="${module.build.dest}"
         includes="org/argouml/**"
         excludes="*.txt,*.bat,*.xml,*.sh,${manifest}"
         manifest="${module.build.dest}/${manifest}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Run ArgoUML from compiled sources                                   -->
  <!-- =================================================================== -->
  <target name="run" depends="install">
    <java classname="org.argouml.application.Main"
          fork="yes">
        <classpath>
            <fileset dir="${module.build.dir}">
                <include name="${module.jarfile.name}" />
	    </fileset>
            <pathelement location="${argo.build.dir}/argouml.jar"/>
            <pathelement location="${ocl-argo.jar.path}"/>
            <pathelement location="${gef.jar.path}"/>
            <pathelement location="${log4j.jar.path}"/>
            <pathelement location="${swidgets.jar.path}"/>
            <pathelement location="${toolbar.jar.path}"/>
            <pathelement location="${commons-logging.jar.path}"/>
            <pathelement location="${antlrall.jar.path}"/>
            <pathelement location="${argo.build.dir}/argouml-model.jar"/>
        </classpath>

    </java>
  </target>

  <!-- =================================================================== -->
  <!-- Clean targets                                                       -->
  <!-- =================================================================== -->
  <target name="clean" depends="init">
    <delete file="${result.dir}/ext/${module.jarfile.name}"/>
    <delete file="${argo.build.dir}/ext/${module.jarfile.name}"/>
    <delete dir="${module.build.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Move the jar file into the extension directory.                     -->
  <!-- =================================================================== -->
  <target name="install" depends="jar">
    <copy todir="${result.dir}/ext">
      <fileset dir="${module.build.dir}" includes="${module.jarfile.name}"/>
    </copy>
  </target>

</project>

<!-- End of file -->
