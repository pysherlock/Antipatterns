只在 client_2_7_0/ 存在：package.html
diff -y --suppress-common-lines -x '.*.[a-ik-zA-IK-Z][b-zB-Z][a-uw-zA-UW-Z].*' client_2_6_0/XSLTProcessorApplet.java client_2_7_0/XSLTProcessorApplet.java
 * $Id: XSLTProcessorApplet.java,v 1.21 2004/02/11 05:22:02 m |	 * $Id: XSLTProcessorApplet.java,v 1.23 2004/12/15 17:35:30 j
							      >	 * 
							      >	 * This class extends Applet which ultimately causes this cla
							      >	 * This is a serious restriction on this class. All fields th
							      >	 * static are written-out/read-in during serialization. So ev
							      >	 * become part of the API. Developers need to take care when 
   * @serial						      |	   * This field is now transient because a 
							      >	   * javax.xml.transform.TransformerFactory from JAXP 
							      >	   * makes no claims to be serializable.
  TransformerFactory m_tfactory = null;			      |	  transient TransformerFactory m_tfactory = null;
  /** 							      <
   * Stylesheet parameter keys				      <
   */							      <
  private Enumeration m_keys;				      <
      System.exit(-1);					      |	      throw new RuntimeException(e.getMessage());
        m_keys = m_parameters.keys();			      |	        
							      >	        Enumeration m_keys = m_parameters.keys();
        System.exit(-1);				      |	        throw new RuntimeException(tfe.getMessage());
        System.exit(-1);				      |	        throw new RuntimeException(e.getMessage());
							      >	  
							      >	  // For compatiblity with old serialized objects
							      >	  // We will change non-serialized fields and change methods
							      >	  // and not have this break us.
							      >	  private static final long serialVersionUID=4618876841979251
							      >	  
							      >	  // For compatibility when de-serializing old objects
							      >	  private void readObject(java.io.ObjectInputStream inStream)
							      >	  {
							      >	      inStream.defaultReadObject();
							      >	      
							      >	      // Needed assignment of non-serialized fields
							      >	      
							      >	      // A TransformerFactory is not guaranteed to be seriali
							      >	      // so we create one here
							      >	      m_tfactory = TransformerFactory.newInstance();
							      >	  }      
